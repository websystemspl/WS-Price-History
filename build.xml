<?xml version="1.0" encoding="UTF-8"?>
<project name="ws_event_calendar" basedir="." default="build">
	<property name="builddir" value="${basedir}/ws_price_history" />
	<property name="password" value="${password}" />
	<property name="update_server" value="${update_server}" />
	<property name="todir" value="${todir}" />
	<target name="build" depends="start, prepare, check-env, composer, prepare-release, upload-release">
	</target>
	<target name="start">
		<echo message=" " />
		<echo message="----------------------------------------------------------------" />
		<echo message="   _____             _                                          " />
		<echo message="  |  __ \           | |                                         " />
		<echo message="  | |  | | ___ _ __ | | ___  _   _                              " />
		<echo message="  | |  | |/ _ | '_ \| |/ _ \| | | |                             " />
		<echo message="  | |__| |  __| |_) | | (_) | |_| |                             " />
		<echo message="  |_____/ \___| .__/|_|\___/ \__, |                             " />
		<echo message="              | |             __/ |                             " />
		<echo message="              |_|            |___/                              " />
		<echo message="" />
		<echo message="----------------------------------------------------------------" />
		<echo message="" />
	</target>
    <target name="prepare">
		<delete includeEmptyDirs="true" failonerror="false">
			<fileset dir="${builddir}" />
		</delete>
		<mkdir dir="${builddir}" />
		<delete file="${basedir}/composer.lock" failonerror="false" />
	</target>
	<target name="create-env">
       <condition property="env.file.exists">
           <available file=".env" />
       </condition>
       <echo file=".env">UPDATE_SERVER=${update_server}</echo>
   </target>
   <target name="check-env" depends="create-env">
       <fail message="Failed to create .env file.">
           <condition>
               <not>
                   <isset property="env.file.exists" />
               </not>
           </condition>
       </fail>
   </target>	
	<target name="composer" description="Run composer install">
		<exec executable="composer">
			<arg value="install" />
		</exec>
	</target>
	<target name="prepare-release">
		<copy todir="${builddir}/App">
			<fileset dir="${basedir}/App" />
		</copy>
		<copy todir="${builddir}/assets">
			<fileset dir="${basedir}/assets" />
		</copy>
		<copy todir="${builddir}/languages">
			<fileset dir="${basedir}/languages" />
		</copy>
		<copy todir="${builddir}/vendor">
			<fileset dir="${basedir}/vendor" />
		</copy>
		<copy todir="${builddir}/">
			<fileset dir="${basedir}/">
				<include name="*.php" />
				<include name="*.md" />
				<include name="*.txt" />
			</fileset>
		</copy>
		<zip destfile="${basedir}/ws_price_history.zip">
			<zipfileset dir="${builddir}" prefix="ws_price_history" />
		</zip>
	</target>
	<target name="upload-release">
		<scp file="ws_price_history.zip" todir="${todir}" password="${password}" trust="true" />
	</target>
</project>